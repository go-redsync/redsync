// Code generated by mockery v1.0.0. DO NOT EDIT.

package redsynctest

import context "context"
import mock "github.com/stretchr/testify/mock"
import redsyncx "github.com/cabify/redsync/v2/redsyncx"
import time "time"

// Redsync is an autogenerated mock type for the Redsync type
type Redsync struct {
	mock.Mock
}

// NewMutex provides a mock function with given fields: ctx, name, ttl, options
func (_m *Redsync) NewMutex(ctx context.Context, name string, ttl time.Duration, options ...redsyncx.Option) redsyncx.Mutex {
	_va := make([]interface{}, len(options))
	for _i := range options {
		_va[_i] = options[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, name, ttl)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 redsyncx.Mutex
	if rf, ok := ret.Get(0).(func(context.Context, string, time.Duration, ...redsyncx.Option) redsyncx.Mutex); ok {
		r0 = rf(ctx, name, ttl, options...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(redsyncx.Mutex)
		}
	}

	return r0
}

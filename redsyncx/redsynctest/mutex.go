// Code generated by mockery v1.0.0. DO NOT EDIT.

package redsynctest

import context "context"
import mock "github.com/stretchr/testify/mock"

// Mutex is an autogenerated mock type for the Mutex type
type Mutex struct {
	mock.Mock
}

// Lock provides a mock function with given fields: _a0
func (_m *Mutex) Lock(_a0 context.Context) (context.Context, error) {
	ret := _m.Called(_a0)

	var r0 context.Context
	if rf, ok := ret.Get(0).(func(context.Context) context.Context); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Unlock provides a mock function with given fields:
func (_m *Mutex) Unlock() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
